# ---- Build stage ----
ARG SHA_256=sha256:858bf22e4155164ccf7ac1373cc9e1a596ceb987b206e0284c266f675cb76e4d
FROM --platform=$BUILDPLATFORM amazoncorretto:17.0.17-alpine3.22@${SHA_256} AS build


WORKDIR /home/gradle/src
COPY gradlew build.gradle ./
COPY gradle gradle
COPY src src

RUN ./gradlew build --no-daemon

# ---- Runtime stage ----
FROM --platform=$BUILDPLATFORM amazoncorretto:17.0.17-alpine3.22@${SHA_256} AS runtime
ARG TARGETARCH
ARG TARGETOS

ENV PORT=8085 DEBUG_PORT=8087
ENV JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT}

RUN addgroup -g 1001 -S appgroup && adduser -u 1001 -S appuser -G appgroup

COPY --chown=appuser:appgroup --from=build \
    /home/gradle/src/build/distributions/src.tar \
    /app/

WORKDIR /app

EXPOSE ${PORT} ${DEBUG_PORT}

ENTRYPOINT ["./src/bin/src"]
LABEL project="di-ipv-core-stub"
# Stage with no dynatrace agent which requires volume mount for config
# i.e A Docker-compose file can be used to mount the config at runtime
# ---- nodynatrace Runtime stage ----
FROM runtime AS nodynatrace
RUN tar -xvf src.tar && rm src.tar \
&& chown -R appuser:appgroup /app

USER appuser
# Stage with dynatrace agent with config baked in
# This the final default stage for normal use
# ---- dynatrace Runtime stage ----
FROM runtime AS dynatrace

USER root

ADD config config

ENV DT_HOME="/opt/dynatrace/oneagent"
RUN --mount=type=secret,id=dt_token \
    DT_API_TOKEN=$(cat /run/secrets/dt_token) && \
    mkdir -p "$DT_HOME" \
    && apk add --no-cache curl wget unzip \
    && wget -O "$DT_HOME/oneagent.zip" "https://khw46367.live.dynatrace.com/api/v1/deployment/installer/agent/unix/paas/latest?flavor=default&include=java&arch=arm&Api-Token=$DT_API_TOKEN" \
    && unzip -d "$DT_HOME" "$DT_HOME/oneagent.zip" \
    && rm "$DT_HOME/oneagent.zip" \
    && tar -xvf src.tar && rm src.tar \
    && chown -R appuser:appgroup /app "$DT_HOME" \
    && apk del wget unzip

ENV LD_PRELOAD=/opt/dynatrace/oneagent/agent/lib64/liboneagentproc.so

USER appuser
